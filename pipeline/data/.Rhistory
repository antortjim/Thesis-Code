# guides(col=guide_legend(title="Tool")) +
scale_color_manual(values = palette) +
geom_abline(slope=1, intercept=0, linetype="dashed")
ROC_curve
histogram_msqrob
histogram_msqrob <- ggplot(RSqM_signif, aes(x = estimate, fill = taxonomy)) +
geom_histogram(position="dodge") + guides(fill=F)
histogram_msqrob
MQ_histogram_plot
MSqRob_histogram_plot
plot_roc_curve(roc_plot_data, aucs)
dd
make_plot_data <- function(roc_data, curve="roc") {
control_data <- data.frame(x = NULL, y = NULL, method = NULL)
pipelines <- roc_data$Tool %>% unique
aucs <- rep(0, length(pipelines))
i <- 1
for(pip in pipelines) {
print(pip)
TN <- (roc_data %>% filter(Tool == pip) %>% arrange(signif) %>% .$Organism) == "Homo sapiens"
TP <- (roc_data %>% filter(Tool == pip) %>% arrange(signif) %>% .$Organism) != "Homo sapiens"
if(curve=="roc") {
control_data <- rbind(control_data,
data.frame(x=(cumsum(TN) / sum(TN)), y=(cumsum(TP) / sum(TP)), Tool = pip)
)
aucs[i] <- roc(roc_data %>% filter(Tool == pip) %>% .$Organism == "Homo sapiens",
roc_data %>% filter(Tool == pip) %>% .$signif
)$auc %>% round(2)
} else if (curve=="prc") {
control_data <- rbind(control_data,
data.frame(x=cumsum(TP)/sum(TP), y = cumsum(TP)/(cumsum(TP) + cumsum(TN)), Tool = pip)
)
}
i <- i + 1
}
return(list(control_data = control_data, aucs = aucs))
}
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
xlab(fpr) + ylab(fnr) + theme_bw() +
theme(legend.position = "top") +
# guides(col=guide_legend(title="Tool")) +
scale_color_manual(values = palette) +
geom_abline(slope=1, intercept=0, linetype="dashed")
# guides(col = guide_legend(override.aes = list(size = 2)))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
}
return(curve_plot)
}
plot_curve(roc_data)
make_plot_data <- function(curve_data, curve="roc") {
control_data <- data.frame(x = NULL, y = NULL, method = NULL)
pipelines <- roc_data$Tool %>% unique
aucs <- rep(0, length(pipelines))
i <- 1
for(pip in pipelines) {
print(pip)
TN <- (curve_data %>% filter(Tool == pip) %>% arrange(signif) %>% .$Organism) == "Homo sapiens"
TP <- (curve_data %>% filter(Tool == pip) %>% arrange(signif) %>% .$Organism) != "Homo sapiens"
if(curve=="roc") {
control_data <- rbind(control_data,
data.frame(x=(cumsum(TN) / sum(TN)), y=(cumsum(TP) / sum(TP)), Tool = pip)
)
aucs[i] <- roc(curve_data %>% filter(Tool == pip) %>% .$Organism == "Homo sapiens",
curve_data %>% filter(Tool == pip) %>% .$signif
)$auc %>% round(2)
} else if (curve=="prc") {
control_data <- rbind(control_data,
data.frame(x=cumsum(TP)/sum(TP), y = cumsum(TP)/(cumsum(TP) + cumsum(TN)), Tool = pip)
)
}
i <- i + 1
}
return(list(control_data = control_data, aucs = aucs))
}
rocc <- make_roc_plot_data(roc_data)
roc_plot_data <- rocc[[1]]
aucs <- rocc[[2]]
prc_plot_data <- make_roc_plot_data(roc_data, curve = "prc")[[1]]
plot_roc_curve(roc_plot_data, aucs)
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
xlab(fpr) + ylab(fnr) + theme_bw() +
theme(legend.position = "top") +
# guides(col=guide_legend(title="Tool")) +
scale_color_manual(values = palette) +
geom_abline(slope=1, intercept=0, linetype="dashed")
# guides(col = guide_legend(override.aes = list(size = 2)))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
}
return(curve_plot)
}
plot_curve(roc_data)
plot_curve(roc_data %>% filter(log2FC > 1))
roc_data <- rbind(
cbind(select(RSqM_signif_taxon, estimate, qval, taxonomy) %>% rename(significance = qval), method = pipelines[1]),
cbind(select(lfq_signif, estimate, p.value, taxonomy) %>% rename(significance=p.value), method = pipelines[2]),
# cbind(select(MSBayQ, mean, significance, Organism) %>% rename(estimate=mean, taxonomy=Organism), method = pipelines[4]),
cbind(select(RSqM_signif, estimate, qval, taxonomy) %>% rename(significance = qval), method = pipelines[3])
)
roc_data$taxonomy <- roc_data$taxonomy %>% as.character()
roc_data[roc_data$taxonomy == "Escherichia coli (strain K12)", "taxonomy"] <- "E. coli"
colnames(roc_data) <- c("log2FC", "signif", "Organism", "Tool")
make_plot_data <- function(curve_data, curve="roc") {
control_data <- data.frame(x = NULL, y = NULL, method = NULL)
pipelines <- roc_data$Tool %>% unique
aucs <- rep(0, length(pipelines))
i <- 1
for(pip in pipelines) {
print(pip)
TN <- (curve_data %>% filter(Tool == pip) %>% arrange(signif) %>% .$Organism) == "Homo sapiens"
TP <- (curve_data %>% filter(Tool == pip) %>% arrange(signif) %>% .$Organism) != "Homo sapiens"
if(curve=="roc") {
control_data <- rbind(control_data,
data.frame(x=(cumsum(TN) / sum(TN)), y=(cumsum(TP) / sum(TP)), Tool = pip)
)
aucs[i] <- roc(curve_data %>% filter(Tool == pip) %>% .$Organism == "Homo sapiens",
curve_data %>% filter(Tool == pip) %>% .$signif
)$auc %>% round(2)
} else if (curve=="prc") {
control_data <- rbind(control_data,
data.frame(x=cumsum(TP)/sum(TP), y = cumsum(TP)/(cumsum(TP) + cumsum(TN)), Tool = pip)
)
}
i <- i + 1
}
return(list(control_data = control_data, aucs = aucs))
}
rocc <- make_roc_plot_data(roc_data)
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
precision <- TeX("Precision ($\\frac{TP}{TP + FP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
theme_bw() +
theme(legend.position = "top") +
# guides(col=guide_legend(title="Tool")) +
scale_color_manual(values = palette) +
geom_abline(slope=1, intercept=0, linetype="dashed")
# guides(col = guide_legend(override.aes = list(size = 2)))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
curve_plot <- curve_plot + xlab(fpr) + ylab(fnr)
} else {
curve_plot <- curve_plot + xlab(fnr) + ylab(precision)
}
return(curve_plot)
}
plot_curve(roc_data %>% filter(log2FC > 1))
plot_curve(roc_data %>% filter(log2FC > 1), curve = "prc")
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
precision <- TeX("Precision ($\\frac{TP}{TP + FP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
theme_bw() +
theme(legend.position = "top") +
# guides(col=guide_legend(title="Tool")) +
scale_color_manual(values = palette) +
geom_abline(slope=1, intercept=0, linetype="dashed")
# guides(col = guide_legend(override.aes = list(size = 2)))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
curve_plot <- curve_plot + xlab(fpr) + ylab(fnr) + geom_abline(slope=1, intercept=0)
} else {
curve_plot <- curve_plot + xlab(fnr) + ylab(precision) + geom_abline(slope=-1, intercept=1)
}
return(curve_plot)
}
plot_curve(roc_data %>% filter(log2FC > 1))
plot_curve(roc_data %>% filter(log2FC > 1), curve = "prc")
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
theme_bw() +
theme(legend.position = "top") +
# guides(col=guide_legend(title="Tool")) +
scale_color_manual(values = palette) +
# guides(col = guide_legend(override.aes = list(size = 2)))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
curve_plot <- curve_plot + xlab(fpr) + ylab(fnr) + geom_abline(slope=1, intercept=0, linetype="dashed")
} else {
curve_plot <- curve_plot + xlab(fnr) + ylab(precision) + geom_abline(slope=-1, intercept=1, linetype="dashed")
}
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
precision <- TeX("Precision ($\\frac{TP}{TP + FP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
theme_bw() +
theme(legend.position = "top") +
# guides(col=guide_legend(title="Tool")) +
scale_color_manual(values = palette) +
# guides(col = guide_legend(override.aes = list(size = 2)))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
curve_plot <- curve_plot + xlab(fpr) + ylab(fnr) + geom_abline(slope=1, intercept=0, linetype="dashed")
} else {
curve_plot <- curve_plot + xlab(fnr) + ylab(precision) + geom_abline(slope=-1, intercept=1, linetype="dashed")
}
return(curve_plot)
}
plot_curve(roc_data %>% filter(log2FC > 1))
roc_data <- rbind(
cbind(select(RSqM_signif_taxon, estimate, qval, taxonomy) %>% rename(significance = qval), method = pipelines[1]),
cbind(select(lfq_signif, estimate, p.value, taxonomy) %>% rename(significance=p.value), method = pipelines[2]),
# cbind(select(MSBayQ, mean, significance, Organism) %>% rename(estimate=mean, taxonomy=Organism), method = pipelines[4]),
cbind(select(RSqM_signif, estimate, qval, taxonomy) %>% rename(significance = qval), method = pipelines[3])
)
roc_data$taxonomy <- roc_data$taxonomy %>% as.character()
roc_data[roc_data$taxonomy == "Escherichia coli (strain K12)", "taxonomy"] <- "E. coli"
colnames(roc_data) <- c("log2FC", "signif", "Organism", "Tool")
make_plot_data <- function(curve_data, curve="roc") {
control_data <- data.frame(x = NULL, y = NULL, method = NULL)
pipelines <- roc_data$Tool %>% unique
aucs <- rep(0, length(pipelines))
i <- 1
for(pip in pipelines) {
print(pip)
TN <- (curve_data %>% filter(Tool == pip) %>% arrange(signif) %>% .$Organism) == "Homo sapiens"
TP <- (curve_data %>% filter(Tool == pip) %>% arrange(signif) %>% .$Organism) != "Homo sapiens"
if(curve=="roc") {
control_data <- rbind(control_data,
data.frame(x=(cumsum(TN) / sum(TN)), y=(cumsum(TP) / sum(TP)), Tool = pip)
)
aucs[i] <- roc(curve_data %>% filter(Tool == pip) %>% .$Organism == "Homo sapiens",
curve_data %>% filter(Tool == pip) %>% .$signif
)$auc %>% round(2)
} else if (curve=="prc") {
control_data <- rbind(control_data,
data.frame(x=cumsum(TP)/sum(TP), y = cumsum(TP)/(cumsum(TP) + cumsum(TN)), Tool = pip)
)
}
i <- i + 1
}
return(list(control_data = control_data, aucs = aucs))
}
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
precision <- TeX("Precision ($\\frac{TP}{TP + FP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
theme_bw() +
theme(legend.position = "top") +
# guides(col=guide_legend(title="Tool")) +
scale_color_manual(values = palette) +
# guides(col = guide_legend(override.aes = list(size = 2)))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
curve_plot <- curve_plot + xlab(fpr) + ylab(fnr) + geom_abline(slope=1, intercept=0, linetype="dashed")
} else {
curve_plot <- curve_plot + xlab(fnr) + ylab(precision) + geom_abline(slope=-1, intercept=1, linetype="dashed")
}
return(curve_plot)
}
plot_curve(roc_data %>% filter(log2FC > 1))
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
precision <- TeX("Precision ($\\frac{TP}{TP + FP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = palette)
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
curve_plot <- curve_plot + xlab(fpr) + ylab(fnr) + geom_abline(slope=1, intercept=0, linetype="dashed")
} else {
curve_plot <- curve_plot + xlab(fnr) + ylab(precision) + geom_abline(slope=-1, intercept=1, linetype="dashed")
}
return(curve_plot)
}
plot_curve(roc_data %>% filter(log2FC > 1))
plot_curve(roc_data %>% filter(log2FC > 1), curve = "prc")
plot_curve(roc_data)
plot_curve(roc_data %>% filter(log2FC > 1))
plot_curve(roc_data %>% filter(log2FC > 1), curve = "prc")
plot_curve(roc_data, curve = "prc")
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
precision <- TeX("Precision ($\\frac{TP}{TP + FP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = palette) +
coord_cartesian(xlim=c(0,1))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
curve_plot <- curve_plot + xlab(fpr) + ylab(fnr) + geom_abline(slope=1, intercept=0, linetype="dashed")
} else {
curve_plot <- curve_plot + xlab(fnr) + ylab(precision) + geom_abline(slope=-1, intercept=1, linetype="dashed")
}
return(curve_plot)
}
plot_curve(roc_data)
plot_curve(roc_data %>% filter(log2FC > 1))
plot_curve(roc_data %>% filter(log2FC > 1), curve = "prc")
plot_curve <- function(curve_data, curve="roc") {
fpr <- TeX("False Positive Rate ($\\frac{FP}{FP + TN}$)")
fnr <- TeX("False Negative Rate ($\\frac{FN}{FN + TP}$)")
precision <- TeX("Precision ($\\frac{TP}{TP + FP}$)")
xcoord <- Inf
ycoord <- -Inf
pipelines <- curve_data$Tool %>% unique
n <- 4
palette <- c("#b42f32", "#e3e3cd", "#eba631", "black")[1:length(pipelines)]
dd <- make_plot_data(curve_data = curve_data, curve=curve)
curve_data <- dd[[1]]
aucs <- dd[[2]]
curve_plot <- ggplot(data = curve_data, aes(x=x,y=y, col=Tool)) +
geom_line(size=1.2) +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = palette) +
coord_cartesian(ylim=c(0,1))
if(curve == "roc") {
for (i in 1:length(pipelines)) {
curve_plot <- curve_plot +
annotate(geom = "label", x = xcoord, y = ycoord, label=paste0("AUC: ", aucs[i]),
fill=palette[i], color="white", fontface="bold",
hjust = 1.2, vjust = -1*i/2 -(i-0.5))
}
curve_plot <- curve_plot + xlab(fpr) + ylab(fnr) + geom_abline(slope=1, intercept=0, linetype="dashed")
} else {
curve_plot <- curve_plot + xlab(fnr) + ylab(precision) + geom_abline(slope=-1, intercept=1, linetype="dashed")
}
return(curve_plot)
}
plot_curve(roc_data)
plot_curve(roc_data %>% filter(log2FC > 1))
plot_curve(roc_data %>% filter(log2FC > 1), curve = "prc")
plot_curve(roc_data, curve = "prc")
plot_curve(roc_data, curve = "prc")
plot_curve(roc_data %>% filter(log2FC > 1), curve = "prc")
roc_data$Organism <- factor(roc_data$Organism, levels = c("Homo sapiens", "E. coli"))
box_plot <- ggplot(roc_data, aes(fill = Organism, x = Organism, y = -log10(signif))) +
# geom_jitter() +
geom_boxplot() +
guides(fill=F) +
facet_wrap(~Tool) +
scale_fill_manual(values = palette)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
palette <- rev(gg_color_hue(2))
roc_data$Organism <- factor(roc_data$Organism, levels = c("Homo sapiens", "E. coli"))
box_plot <- ggplot(roc_data, aes(fill = Organism, x = Organism, y = -log10(signif))) +
# geom_jitter() +
geom_boxplot() +
guides(fill=F) +
facet_wrap(~Tool) +
scale_fill_manual(values = palette)
histogram_plot <- ggplot(roc_data, aes(fill = Organism, x = log2FC)) +
# geom_jitter() +
geom_histogram(position="dodge", bins=60) +
facet_wrap(~Tool) +
theme(legend.position = "top") +
coord_cartesian(xlim=c(-3,3)) +
scale_x_continuous(breaks=(-3:3)) +
labs(y = "Frequency")+
scale_fill_manual(values = palette)
MSBayQ$width <- abs(MSBayQ$`hpd_97.5` - MSBayQ$`hpd_2.5`)
ggplot(MSBayQ %>% filter(n_peptides>3), aes(fill = Organism, x = mean)) +
# geom_jitter() +
geom_histogram(position="dodge", bins=60) +
theme(legend.position = "top") +
# coord_cartesian(xlim=c(-3,3)) +
# scale_x_continuous(breaks=(-3:3)) +
labs(y = "Frequency")+
scale_fill_manual(values = palette)
volcano_plot <- ggplot(roc_data, aes(col = Organism, x = log2FC, y = -log10(signif))) +
# geom_jitter() +
geom_point(size=0.2) +
facet_wrap(~Tool) +
theme(legend.position = "top") +
coord_cartesian(xlim=c(-3,3)) +
scale_x_continuous(breaks=(-3:3)) +
guides(col = guide_legend(override.aes = list(size = 2))) +
scale_color_manual(values = palette)
combined_plot <- plot_grid(histogram_plot,
volcano_plot + theme(legend.position = "none") + geom_hline(yintercept = -log10(0.05), linetype="dashed"),
box_plot + geom_hline(yintercept = -log10(0.05), linetype="dashed"),
nrow=3, labels=c("A","B","C"), align = "v")
combined_plot
nrow(lfq_signif)
nrow(RSqM_signif_taxon)
group_by(RSqM_signif_taxon, taxonomy) %>% summarise(count=n())
